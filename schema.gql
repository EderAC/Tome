# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Character {
  id: String!
  level: String!
  name: String!
  pcClass: String!
  race: String!
  user: User!
}

input CharacterInput {
  level: String!
  name: String!
  pcClass: String!
  race: String!
  user_id: String!
}

type Mutation {
  addCharacter(characterInput: CharacterInput!): characterPayload!
  addPcClass(pcClassInput: PcClassInput!): PcClass!
  addSpell(spellInput: SpellInput!): Spell!
  addUser(userInput: UserInput!): User!
  fillDB: Spell!
}

type PcClass {
  description: String!
  hitDice: String!
  id: String!
  name: String!
  primaryAbility: String!
}

input PcClassInput {
  description: String!
  hitDice: String!
  name: String!
  primaryAbility: String!
}

type Query {
  getCharacters: [Character!]
  getPcClasses: [PcClass!]
  getSpells: [Spell!]
  getUsers: [User!]
  pcClass(id: ID!): PcClass
  spell(id: ID!): Spell
  spellByClassId(classId: ID!): [Spell!]
  userByName(name: String!): User
}

type Spell {
  cast: String!
  component: String!
  description: String!
  duration: String!
  id: String!
  level: String!
  material: String!
  name: String!
  pcClasses: [PcClass!]!
  range: String!
  school: String!
}

input SpellInput {
  cast: String!
  component: String!
  description: String!
  duration: String!
  level: String!
  material: String!
  name: String!
  pcClasses: [String!]!
  range: String!
  school: String!
}

type User {
  id: String!
  name: String!
  password: String!
}

input UserInput {
  name: String!
  password: String!
}

type characterPayload {
  id: String!
  level: String!
  name: String!
  pcClass: String!
  race: String!
}
